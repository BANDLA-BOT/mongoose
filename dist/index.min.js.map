{"version":3,"sources":["index.js"],"names":["express","require","mongoose","User","connect","then","Orders","console","log","error","message","app","use","json","post","req","res","orderDetails","regeneratorRuntime","async","_context","prev","next","orderPrice","body","address","awrap","save","order","t0","status","stop","put","_req$params","id","_context2","params","customerId","findOneAndUpdate","_id","$push","customer","sent","get","orders","_context3","find","populate","_context4","user","listen"],"mappings":"aAAA,IAAMA,QAAUC,QAAQ,WAClBC,SAAWD,QAAQ,YADnBD,KAAOC,QAAU,QAGjBE,KAAOF,QAAQ,iCAFfC,OAAWD,QAAQ,sCACzBC,SAAUE,QAAGH,2CAKZI,KAAK,WAJAF,QAAOF,IAAAA,wBADb,MAEMK,SAAAA,GAOFC,QAAQC,IAAIC,EAAMC,WAHlBH,IAAAA,IAAQC,UACXG,IAHDC,IAAAZ,QAIOa,QACHN,IAAAA,IAAAA,QAyCJI,IAAIG,KAAK,IAAK,SAAAC,EAAAC,GAAA,IAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAC,KAAA,EAAAJ,EAAA,IAAAX,OAAA,CAAAiB,WAAAR,EAAAS,KAAAD,WAAAE,QAAAV,EAAAS,KAAAC,UAAAL,EAAAE,KAAA,EAAAJ,mBAAAQ,MAGFH,EAAcI,QAHZ,KAAA,EAIFF,EAAAA,KAAAA,CAAAA,QAAYD,gBACZI,MAAAX,IALEG,EAAAE,KAAA,GAAA,MAAA,KAAA,EAAAF,EAAAC,KAAA,EAAAD,EAAAS,GAAAT,EAAA,MAAA,GAE0BJ,EAF1Bc,OAON,KAAAjB,KAAA,CAAAH,QAAA,wBAAAD,MAAAW,EAAAS,GAAAnB,UAPM,KAAA,GAAA,IAAA,MAAA,OAAAU,EAAAW,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,OAAApB,IAAAqB,IAAA,uBAAA,SAAAjB,EAQAE,GARA,IAAAgB,EAAAC,EAAA,OAAAhB,mBAAAC,MAAA,SAAAgB,GAAA,OAAA,OAAAA,EAAAd,KAAAc,EAAAb,MAAA,KAAA,EAAA,OAAAa,EAAAd,KAAA,EAAAY,EAAAlB,EAAAqB,OAAAF,EAAAD,EAAAC,GAAAD,EAAAI,WAAAF,EAAAb,KAAA,EAAAJ,mBAAAQ,MASGpB,OAAAgC,iBAAA,CAAAC,IAAAL,GAAA,CAAAM,MAAA,CAAAC,SAAA1B,EAAAqB,OAAAC,eATH,KAAA,EAAAF,EAAAO,KASIhC,EAAAA,KAAAA,CAAAA,QAAQ,UATZyB,EAAAb,KAAA,GAAA,MAAA,KAAA,EAAAa,EAAAd,KAAA,EAAAc,EAAAN,GAAAM,EAAA,MAAA,GASGnB,EAATH,KAAA,CAAAH,QAAA,wBAAAD,MAAA0B,EAAAN,GAAAnB,UATM,KAAA,GAAA,IAAA,MAAA,OAAAyB,EAAAJ,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,OAuBdpB,IAAIgC,IAAI,UAAW,SAAM5B,EAAIC,GAAV,IAAA4B,EAAA,OAAA1B,mBAAAC,MAAA,SAAA0B,GAAA,OAAA,OAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,KAAA,EAAA,OAAAuB,EAAAxB,KAAA,EAAAwB,EAAAvB,KAAA,EAAAJ,mBAAAQ,MAvBLpB,OAAAwC,OAAAC,SAAA,aAuBK,KAAA,EAvBLH,EAuBKC,EAAAH,KAvBL1B,EAAAH,KAAA,CAAA+B,OAAAA,IAuBKC,EAAAvB,KAAA,EAAA,MAAA,KAAA,EAAAuB,EAAAxB,KAAA,EAAAwB,EAAAhB,GAAAgB,EAAA,MAAA,GAAA,KAAA,EAAA,IAAA,MAAA,OAAAA,EAAAd,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,OAQnBpB,IAAIgC,IAAI,OAAQ,SAAM5B,EAAIC,GAAV,OAAAE,mBAAAC,MAAA,SAAA6B,GAAA,OAAA,OAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,KAAA,EA/BF,IAkBGN,EAAAH,KAAT,CAAAH,QAAA,UAAAuC,KAAAA,OAJwB,MAAAxC,GAAAO,EAAAH,KAAA,CAAAH,QAAA,wBAAAD,MAAAA,EAAAC,UAiBhB,KAAA,EAAA,IAAA,MAAA,OAAAsC,EAAAjB,YAjBgBpB,IAAAuC,OAAA,IAAA,WAMxBlC,QAAAA,IAAIH","file":"index.min.js","sourcesContent":["const express = require('express')\r\nconst mongoose = require('mongoose')\r\nconst cors = require('cors')\r\nconst User = require('./models/todos/user.models.js')\r\nconst Orders = require('./models/ecommerce/order.models.js')\r\n\r\nmongoose.connect('mongodb://localhost:27017/DataModelling')\r\n.then(()=>{\r\n    console.log('Database connected')\r\n})\r\n.catch((error)=>{\r\n    console.log(error.message)\r\n})\r\nconst app = express()\r\napp.use(express.json());\r\napp.use(cors())\r\n\r\n// app.post('/', async(req,res)=>{\r\n//     try {\r\n        // const iterations = 10\r\n        // for(let i=0; i<=5;i++){\r\n        //     await User.create({\r\n        //         firstName:req.body.firstName,\r\n        //         lastName:req.body.lastName,\r\n        //         age:i,\r\n        //         gender:req.body.gender,\r\n        //         // email:req.body.email,\r\n        //         phone:req.body.phone,\r\n        //         // username:req.body.username,\r\n        //         password:req.body.password,\r\n        //         height:req.body.height,\r\n        //         weight:req.body.weight,\r\n        //         eyeColor:req.body.eyeColor\r\n        //     })\r\n        // }\r\n        // res.status(201).json({message:\"Created\", user:newUser})\r\n        \r\n        // const iterations = 10\r\n        // for(let i=0; i<=iterations;i++){\r\n        //     await Orders.create({\r\n               \r\n        //         // orderItems,\r\n        //         // address,\r\n        //         orderPrice:Math.floor(Math.random()*100)\r\n        //     })\r\n        // }\r\n        // res.json()\r\n\r\n//     } catch (error) {\r\n//         res.json({message:error.message})\r\n//     }\r\n// })\r\napp.post('/', async(req,res)=>{\r\n    try {\r\n        const orderDetails = new Orders({\r\n            orderPrice:req.body.orderPrice,\r\n            address:req.body.address,\r\n            // status:req.body.status,\r\n        })\r\n        // orderDetails.customer.push(customerId)\r\n        await orderDetails.save()\r\n        res.json({message:\"Order created\", order:orderDetails})\r\n    } catch (error) {\r\n        res.status(500).json({message:\"Internal server error\", error:error.message})\r\n    }\r\n})\r\napp.put('/put/:id/:customerId', async(req,res)=>{\r\n    try {\r\n        const {id, customerId} = req.params\r\n        const order = await Orders.findOneAndUpdate({_id:id},{$push:{customer:req.params.customerId}})\r\n        res.json({message:\"ADDED\"})\r\n    } catch (error) {\r\n        res.json({message:\"Internal server Error\", error:error.message})\r\n    }\r\n})\r\napp.get('/orders', async(req,res)=>{\r\n    try {\r\n        const orders = await Orders.find().populate('customer')\r\n        res.json({orders:orders})\r\n    } catch (error) {\r\n        \r\n    }\r\n})\r\napp.get('/get', async(req,res)=>{\r\n   try {\r\n    // const user = await User.find().where('username').eq('guruprasad')\r\n    // if(!user){\r\n    //     throw new Error(\"Error while fetching or No users available\")\r\n    // }\r\n    // else{\r\n    //     return res.json({message:\"User fetched\",user:user})\r\n    // }\r\n    // const {username} = req.body\r\n    // const doc = await User.replaceOne({username:username}, {password:\"12345667888\"})\r\n    \r\n    // res.json({User:doc})\r\n    // const query = User.findOne({username:\"guruprasad\"})\r\n    // query.select('username')\r\n    // const person = await query.exec();\r\n    // console.log(person.username)\r\n    // res.json({email:person})\r\n\r\n    // const user = await User.find({_id:'668faba9f10aecaccf501ea7'})\r\n    //                         .where(\"lastName\")\r\n    //                         .eq('Prasad')\r\n    //                         .where(\"height\").gt(2).lt(10)\r\n                            \r\n                         \r\n    // const user = await User.find().sort({firstName:1})\r\n    // const user = await User.find().limit(1).select('-password -email')\r\n    // for await(const doc of User.find()){\r\n    //     res.json({message:\"Queried\", user:doc})\r\n    // }\r\n    res.json({message:\"Queried\", user:user})\r\n   } catch (error) {\r\n    res.json({message:\"Internal server error\", error:error.message})\r\n   }\r\n})\r\n\r\napp.listen(8000,()=>{\r\n    console.log(\"Running\")\r\n})"]}